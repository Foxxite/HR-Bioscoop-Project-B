<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AccCreateSucces" xml:space="preserve">
    <value>  Account has been created succesfully!</value>
  </data>
  <data name="Accinfo" xml:space="preserve">
    <value>Account information</value>
  </data>
  <data name="AgeChangeSucces" xml:space="preserve">
    <value>Age has been changed succesfully!</value>
  </data>
  <data name="AgeNotValid" xml:space="preserve">
    <value>  Please enter a valid number!</value>
  </data>
  <data name="AmountMess" xml:space="preserve">
    <value>Enter the amount you want to enter, press enter if you want to return to the catering menu:</value>
  </data>
  <data name="Basket" xml:space="preserve">
    <value>Basket</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="Catering" xml:space="preserve">
    <value>Catering</value>
  </data>
  <data name="CateringMenu" xml:space="preserve">
    <value>Catering menu</value>
  </data>
  <data name="CaterName" xml:space="preserve">
    <value>Currently selected menu-item: </value>
  </data>
  <data name="ChangeAcc" xml:space="preserve">
    <value>Change account information</value>
  </data>
  <data name="ChangeAge" xml:space="preserve">
    <value>Change age</value>
  </data>
  <data name="ChangeMail" xml:space="preserve">
    <value>Change email-address\n</value>
  </data>
  <data name="ChangeName" xml:space="preserve">
    <value>Change name</value>
  </data>
  <data name="ChangePass" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ChangeUserInfo" xml:space="preserve">
    <value>Change user information</value>
  </data>
  <data name="ChangeUserName" xml:space="preserve">
    <value>Change username</value>
  </data>
  <data name="Checkout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>done</value>
  </data>
  <data name="EmailChangeSucces" xml:space="preserve">
    <value>Email-address has been changed succesfully!</value>
  </data>
  <data name="EmailNotValid" xml:space="preserve">
    <value>  Enter a valid email-address!</value>
  </data>
  <data name="EmptyString" xml:space="preserve">
    <value>**empty**</value>
  </data>
  <data name="EnterAge" xml:space="preserve">
    <value>  Enter your age:</value>
  </data>
  <data name="EnterAudi" xml:space="preserve">
    <value>Enter the auditorium name: </value>
  </data>
  <data name="EnterAudiPath" xml:space="preserve">
    <value>Enter absolute path for image file:</value>
  </data>
  <data name="EnterCreditcard" xml:space="preserve">
    <value>Enter your creditcard number: </value>
  </data>
  <data name="EnterMail" xml:space="preserve">
    <value>  Enter your email-address:</value>
  </data>
  <data name="EnterName" xml:space="preserve">
    <value>  Enter your name:</value>
  </data>
  <data name="EnterNewPW" xml:space="preserve">
    <value>Enter your new password</value>
  </data>
  <data name="EnterPW" xml:space="preserve">
    <value>  Enter your password:</value>
  </data>
  <data name="EnterSeats" xml:space="preserve">
    <value>Enter the desired seat(s), type 'cancel' to go back to the movies or press done if you want to add the seats to your basket:</value>
  </data>
  <data name="EnterSeatsExample" xml:space="preserve">
    <value>Ex: For seat X:10 Y:12 enter '10,12' without the qoutes. For multiple seats enter the cooridinates seperated by a space. Ex: '10,12 10,13'.</value>
  </data>
  <data name="EnterUserName" xml:space="preserve">
    <value>  Enter your username:</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="GroupInfo" xml:space="preserve">
    <value>Created by: INF1C group 3</value>
  </data>
  <data name="KeyPressToReturn" xml:space="preserve">
    <value>Press any key to return to the main menu</value>
  </data>
  <data name="LoadingMessage" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="LoginMenu" xml:space="preserve">
    <value>Login with existing account</value>
  </data>
  <data name="LoginMessage" xml:space="preserve">
    <value>  You will be asked to login in a few moments...</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="LogScreen" xml:space="preserve">
    <value>Login screen</value>
  </data>
  <data name="MainMenuName" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="MovCat" xml:space="preserve">
    <value>Movie Catalogue</value>
  </data>
  <data name="MoveReviewScore" xml:space="preserve">
    <value>Review Score</value>
  </data>
  <data name="MovieAge" xml:space="preserve">
    <value>Age Rating</value>
  </data>
  <data name="MovieDesc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="MoviePrice" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="MovieTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="MovieTrailer" xml:space="preserve">
    <value>Trailer</value>
  </data>
  <data name="NameApp" xml:space="preserve">
    <value>Cinema App\n</value>
  </data>
  <data name="NameChangeSucces" xml:space="preserve">
    <value>Name has been changed succesfully!</value>
  </data>
  <data name="NameNotEmpty" xml:space="preserve">
    <value>  Name cannot be empty!</value>
  </data>
  <data name="OrderID" xml:space="preserve">
    <value>Your order-id: </value>
  </data>
  <data name="Ordersucces" xml:space="preserve">
    <value>Order created succesfully</value>
  </data>
  <data name="PressArrow" xml:space="preserve">
    <value>
  Use the ↑ and ↓ keys to selection and item.</value>
  </data>
  <data name="PressKeyToMovCat" xml:space="preserve">
    <value>Press any key to return to the movie catalogue...</value>
  </data>
  <data name="PressReturn" xml:space="preserve">
    <value>  Press return to make your choice</value>
  </data>
  <data name="PWChangeSucces" xml:space="preserve">
    <value>Password has been changed succesfully</value>
  </data>
  <data name="PWNotEmpty" xml:space="preserve">
    <value>  Password cannot be empty</value>
  </data>
  <data name="RegisterNew" xml:space="preserve">
    <value>Register New Account</value>
  </data>
  <data name="RegScreen" xml:space="preserve">
    <value>Registration Screen</value>
  </data>
  <data name="ReturnToMain" xml:space="preserve">
    <value>Press any key to return to the main menu...</value>
  </data>
  <data name="ReturnToMainOption" xml:space="preserve">
    <value>Return to Main Menu</value>
  </data>
  <data name="UserNameChangeSucces" xml:space="preserve">
    <value>Username has been changed succesfully!</value>
  </data>
  <data name="UsernameInUse" xml:space="preserve">
    <value>  Username is already in use!</value>
  </data>
  <data name="UsernameNotEmpty" xml:space="preserve">
    <value>  Username cannot be empty!</value>
  </data>
  <data name="UserNotExist" xml:space="preserve">
    <value>  This user does not exist.</value>
  </data>
  <data name="VarAge" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="VarEmailAddress" xml:space="preserve">
    <value>Email-address</value>
  </data>
  <data name="VarName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="VarUserName" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="ViewAcc" xml:space="preserve">
    <value>View account information</value>
  </data>
  <data name="ViewCurrentMovies" xml:space="preserve">
    <value>View Current Movies</value>
  </data>
  <data name="ViewPermError" xml:space="preserve">
    <value>You don't have permission to view this.</value>
  </data>
  <data name="WaitAccCreateMess" xml:space="preserve">
    <value>  Please wait while we are creating your account, this might take a few seconds...</value>
  </data>
  <data name="WaitingMess" xml:space="preserve">
    <value>  You will be redirected to the main menu in a few moments...</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WrongPW" xml:space="preserve">
    <value>  Wrong password, please try again.</value>
  </data>
</root>